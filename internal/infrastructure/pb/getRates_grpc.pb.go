//protoc --go_out=. --go-grpc_out=. getRates.proto

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.21.12
// source: getRates.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	GetRateser_GetRates_FullMethodName = "/pbPackage.GetRateser/GetRates"
)

// GetRateserClient is the client API for GetRateser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GetRateserClient interface {
	GetRates(ctx context.Context, in *RatesRequest, opts ...grpc.CallOption) (*RatesResponse, error)
}

type getRateserClient struct {
	cc grpc.ClientConnInterface
}

func NewGetRateserClient(cc grpc.ClientConnInterface) GetRateserClient {
	return &getRateserClient{cc}
}

func (c *getRateserClient) GetRates(ctx context.Context, in *RatesRequest, opts ...grpc.CallOption) (*RatesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RatesResponse)
	err := c.cc.Invoke(ctx, GetRateser_GetRates_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetRateserServer is the server API for GetRateser service.
// All implementations must embed UnimplementedGetRateserServer
// for forward compatibility
type GetRateserServer interface {
	GetRates(context.Context, *RatesRequest) (*RatesResponse, error)
	mustEmbedUnimplementedGetRateserServer()
}

// UnimplementedGetRateserServer must be embedded to have forward compatible implementations.
type UnimplementedGetRateserServer struct {
}

func (UnimplementedGetRateserServer) GetRates(context.Context, *RatesRequest) (*RatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRates not implemented")
}
func (UnimplementedGetRateserServer) mustEmbedUnimplementedGetRateserServer() {}

// UnsafeGetRateserServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GetRateserServer will
// result in compilation errors.
type UnsafeGetRateserServer interface {
	mustEmbedUnimplementedGetRateserServer()
}

func RegisterGetRateserServer(s grpc.ServiceRegistrar, srv GetRateserServer) {
	s.RegisterService(&GetRateser_ServiceDesc, srv)
}

func _GetRateser_GetRates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetRateserServer).GetRates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GetRateser_GetRates_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetRateserServer).GetRates(ctx, req.(*RatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GetRateser_ServiceDesc is the grpc.ServiceDesc for GetRateser service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GetRateser_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pbPackage.GetRateser",
	HandlerType: (*GetRateserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRates",
			Handler:    _GetRateser_GetRates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "getRates.proto",
}
